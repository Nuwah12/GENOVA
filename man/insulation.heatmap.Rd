% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zz_insulation.heatmap_old.R
\name{insulation.heatmap}
\alias{insulation.heatmap}
\title{Plot insulation-heatmaps.}
\usage{
insulation.heatmap(
  insulationList,
  bed = NULL,
  borders = NULL,
  focus = 1,
  sortWidth = 10,
  whatToPlot = "both",
  profileFunct = mean,
  title = NULL,
  flank = 5e+05,
  zlim = c(-1, 1),
  profileCols = NULL,
  profileZlim = NULL,
  heatmapCols = rev(c("white", "white", "white", "red", "black")),
  leftNorm = F,
  verbose = F
)
}
\arguments{
\item{insulationList}{A named list of results from genome.wide.insulation().}

\item{bed}{A BED-df with TAD-calls. Only the first three columns
(chrom, start & stop) are important. Will use unique borders.}

\item{borders}{A df with borders-calls. Only the first three columns
(chrom, start & stop) are important: the middle of the region will be used
for the alignment. If given, this function will ignore the bed-agument. Will
use all borders, regardless of uniqueness.}

\item{focus}{Sort on which sample? (give the index-number of the list)}

\item{sortWidth}{Percentage of columns to sort on (aligned on center)}

\item{whatToPlot}{Do you want to plot a profile, heatmap or both?}

\item{profileFunct}{Function to make profile-plots (mean, median, sum)}

\item{title}{Title for plot}

\item{flank}{Amount of flanking bp.}

\item{zlim}{The heatmap-zlims c(min,max).}

\item{profileCols}{Vector of line-colors for profiles}

\item{profileZlim}{The profile-zlims c(min,max).}

\item{heatmapCols}{A vector of colors for the heatmap-gradient.}

\item{leftNorm}{Normalise data on median on most upstream bin.}

\item{verbose}{Should this function be chatty?}
}
\value{
A plot plus an (invisible) dataframe of the underlying matrix.
}
\description{
Takes a list of insulation-scores and plots a sorted heatmap and/or
average profile.
}
\examples{
\dontrun{
# Get the insulation score with window-size 25 of two experiments.
WT_10kb_ins <- genome.wide.insulation(hic = WT_10kb, window.size = 25)
SCC4_10kb_ins <- genome.wide.insulation(hic = SCC4_10kb, window.size = 25)

# Store insulation-scores in a named list
inList <- list(WT = WT_10kb_ins, SCC4 = SCC4_10kb_ins)

# Plot the heatmap and profile and store the underlying df in df.out.
df.out <- insulation.heatmap(inList,
  bed = WT_TADs,
  zlim = c(-.5, 0.25), profileZlim = c(-.75, -.1)
)
}
}
\author{
Robin H. van der Weide, \email{r.vd.weide@nki.nl}
}
